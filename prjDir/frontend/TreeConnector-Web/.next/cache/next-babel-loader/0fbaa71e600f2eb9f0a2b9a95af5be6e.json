{"ast":null,"code":"var _jsxFileName = \"/media/jaeho/EXTSSD/gitlab/TreeConnector-Web/pages/mytree.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport Link from 'next/link';\nimport axios from 'axios';\nimport API_URL from '../components/ApiUrl';\nimport Router from 'next/router';\n\nclass MyTree extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  static async getInitialProps({\n    req\n  }) {\n    const response = await axios.get(API_URL + '/listtrees');\n    console.log(response.data);\n    return {\n      trees: response.data\n    };\n  }\n\n  handleAdd(event) {\n    event.preventDefault();\n    Router.push('/addtree');\n  }\n\n  handleUpdate(event) {\n    alert(\"not yet\");\n    event.preventDefault();\n  }\n\n  handleDelete(event) {\n    alert(\"not yet\");\n    event.preventDefault();\n  }\n\n  render() {\n    const {\n      trees\n    } = this.props;\n\n    if (typeof trees.map !== \"undefined\") {\n      return __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }, \"\\uB0B4 \\uB098\\uBB34 \\uC870\\uD68C\", __jsx(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }), __jsx(\"input\", {\n        type: \"submit\",\n        value: \"Add\",\n        onClick: this.handleAdd,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }), __jsx(\"input\", {\n        type: \"submit\",\n        value: \"Update\",\n        onClick: this.handleUpdate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }), __jsx(\"input\", {\n        type: \"submit\",\n        value: \"Delete\",\n        onClick: this.handleDelete,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }));\n    } else {\n      const treeList = trees.map(tree => __jsx(\"li\", {\n        key: tree.Id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }, __jsx(Link, {\n        href: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 43\n        }\n      }, __jsx(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 57\n        }\n      }, tree.Id))));\n      return __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }, \"\\uB0B4 \\uB098\\uBB34 \\uC870\\uD68C\", __jsx(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }, treeList), __jsx(\"input\", {\n        type: \"submit\",\n        value: \"Add\",\n        onClick: this.handleAdd,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }), __jsx(\"input\", {\n        type: \"submit\",\n        value: \"Update\",\n        onClick: this.handleUpdate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }), __jsx(\"input\", {\n        type: \"submit\",\n        value: \"Delete\",\n        onClick: this.handleDelete,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }));\n    }\n  }\n\n}\n\nexport default MyTree;","map":{"version":3,"sources":["/media/jaeho/EXTSSD/gitlab/TreeConnector-Web/pages/mytree.js"],"names":["Layout","Link","axios","API_URL","Router","MyTree","React","Component","constructor","props","state","handleAdd","bind","handleUpdate","handleDelete","getInitialProps","req","response","get","console","log","data","trees","event","preventDefault","push","alert","render","map","treeList","tree","Id"],"mappings":"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","sourcesContent":["import Layout from '../components/Layout';\r\nimport Link from 'next/link'\r\nimport axios from 'axios';\r\nimport API_URL from '../components/ApiUrl'\r\nimport Router from 'next/router';\r\n\r\nclass MyTree extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        \r\n        this.handleAdd = this.handleAdd.bind(this);\r\n        this.handleUpdate = this.handleUpdate.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n    }\r\n\r\n    static async getInitialProps ({req}) {\r\n        const response = await axios.get(API_URL + '/listtrees');\r\n        console.log(response.data);\r\n        return  {\r\n            trees: response.data\r\n        }\r\n    }\r\n\r\n    handleAdd(event) {\r\n        event.preventDefault();\r\n        Router.push('/addtree');\r\n    }\r\n\r\n    handleUpdate(event) {\r\n        alert(\"not yet\");\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleDelete(event) {\r\n        alert(\"not yet\");\r\n        event.preventDefault();\r\n    }\r\n    \r\n    render() {\r\n\r\n        const { trees } = this.props;\r\n\r\n        if(typeof trees.map !== \"undefined\") {\r\n            return(\r\n                <Layout>\r\n                    내 나무 조회\r\n                    <ul>\r\n                    </ul>\r\n                <input type=\"submit\" value=\"Add\" onClick={this.handleAdd}/>\r\n                <input type=\"submit\" value=\"Update\" onClick={this.handleUpdate}/>\r\n                <input type=\"submit\" value=\"Delete\" onClick={this.handleDelete}/>\r\n                </Layout>\r\n            )\r\n        }\r\n        else {\r\n            const treeList = trees.map(\r\n                tree => <li key={tree.Id}><Link href=\"\"><a>{tree.Id}</a></Link></li>\r\n            )\r\n            return (\r\n                <Layout>\r\n                    내 나무 조회\r\n                    <ul>\r\n                        {treeList}\r\n                    </ul>\r\n                <input type=\"submit\" value=\"Add\" onClick={this.handleAdd}/>\r\n                <input type=\"submit\" value=\"Update\" onClick={this.handleUpdate}/>\r\n                <input type=\"submit\" value=\"Delete\" onClick={this.handleDelete}/>\r\n                </Layout>\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\nexport default MyTree;"]},"metadata":{},"sourceType":"module"}
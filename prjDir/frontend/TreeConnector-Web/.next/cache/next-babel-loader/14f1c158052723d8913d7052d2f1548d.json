{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Layout from '../components/Layout';\nimport accounts from '../components/Accounts';\n\nvar SignIn = /*#__PURE__*/function (_React$Component) {\n  _inherits(SignIn, _React$Component);\n\n  var _super = _createSuper(SignIn);\n\n  function SignIn(props) {\n    var _this;\n\n    _classCallCheck(this, SignIn);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      id: '',\n      pw: ''\n    };\n    _this.handleIdChange = _this.handleIdChange.bind(_assertThisInitialized(_this));\n    _this.handlePwChange = _this.handlePwChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(SignIn, [{\n    key: \"handleIdChange\",\n    value: function handleIdChange(event) {\n      this.setState({\n        id: event.target.value\n      });\n    }\n  }, {\n    key: \"handlePwChange\",\n    value: function handlePwChange(event) {\n      this.setState({\n        pw: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var flag = false;\n\n      var _iterator = _createForOfIteratorHelper(accounts),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var value = _step.value;\n\n          if (value.id === this.state.id && value.pw === this.state.pw) {\n            flag = true;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (flag) {\n        alert(\"Login Success\");\n      } else {\n        alert(\"Login failed\");\n      }\n    }\n  }]);\n\n  return SignIn;\n}(React.Component);\n\nexport default SignIn;","map":{"version":3,"sources":["/media/jaeho/EXTSSD/gitlab/TreeConnector-Web/pages/signin.js"],"names":["Layout","accounts","SignIn","props","state","id","pw","handleIdChange","bind","handlePwChange","handleSubmit","event","setState","target","value","flag","alert","React","Component"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;IAEMC,M;;;;;AACF,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,EAAE,EAAE,EADK;AAETC,MAAAA,EAAE,EAAE;AAFK,KAAb;AAKA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,+BAAtB;AACA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBD,IAApB,+BAAtB;AACA,UAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,+BAApB;AATe;AAUlB;;;;mCAEcG,K,EAAO;AAClB,WAAKC,QAAL,CAAc;AAACP,QAAAA,EAAE,EAAEM,KAAK,CAACE,MAAN,CAAaC;AAAlB,OAAd;AACH;;;mCAEcH,K,EAAO;AAClB,WAAKC,QAAL,CAAc;AAACN,QAAAA,EAAE,EAAEK,KAAK,CAACE,MAAN,CAAaC;AAAlB,OAAd;AACH;;;iCAEYH,K,EAAO;AAChB,UAAII,IAAI,GAAG,KAAX;;AADgB,iDAEEd,QAFF;AAAA;;AAAA;AAEhB,4DAA4B;AAAA,cAAnBa,KAAmB;;AACxB,cAAGA,KAAK,CAACT,EAAN,KAAa,KAAKD,KAAL,CAAWC,EAAxB,IAA8BS,KAAK,CAACR,EAAN,KAAa,KAAKF,KAAL,CAAWE,EAAzD,EAA6D;AACzDS,YAAAA,IAAI,GAAG,IAAP;AACH;AACJ;AANe;AAAA;AAAA;AAAA;AAAA;;AAOhB,UAAGA,IAAH,EAAS;AACLC,QAAAA,KAAK,CAAC,eAAD,CAAL;AACH,OAFD,MAGK;AACDA,QAAAA,KAAK,CAAC,cAAD,CAAL;AACH;AACJ;;;;EAlCgBC,KAAK,CAACC,S;;AAqC3B,eAAehB,MAAf","sourcesContent":["import Layout from '../components/Layout';\r\nimport accounts from '../components/Accounts';\r\n\r\nclass SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            pw: ''\r\n        };\r\n\r\n        this.handleIdChange = this.handleIdChange.bind(this);\r\n        this.handlePwChange = this.handlePwChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleIdChange(event) {\r\n        this.setState({id: event.target.value});\r\n    }\r\n\r\n    handlePwChange(event) {\r\n        this.setState({pw: event.target.value});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        let flag = false;\r\n        for (let value of accounts) {\r\n            if(value.id === this.state.id && value.pw === this.state.pw) {\r\n                flag = true;\r\n            }\r\n        }\r\n        if(flag) {\r\n            alert(\"Login Success\");\r\n        }\r\n        else {\r\n            alert(\"Login failed\");\r\n        }\r\n    }\r\n}\r\n\r\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}
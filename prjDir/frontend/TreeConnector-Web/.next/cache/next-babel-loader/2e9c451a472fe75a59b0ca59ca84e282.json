{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/media/jaeho/EXTSSD/gitlab/TreeConnector-Web/pages/mytree.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Layout from '../components/Layout';\nimport axios from 'axios';\nimport API_URL from '../components/ApiUrl';\n\nvar MyTree = /*#__PURE__*/function (_React$Component) {\n  _inherits(MyTree, _React$Component);\n\n  var _super = _createSuper(MyTree);\n\n  function MyTree(props) {\n    var _this;\n\n    _classCallCheck(this, MyTree);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    _this.handleAdd = _this.handleAdd.bind(_assertThisInitialized(_this));\n    _this.handleUpdate = _this.handleUpdate.bind(_assertThisInitialized(_this));\n    _this.handleDelete = _this.handleDelete.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(MyTree, [{\n    key: \"handleAdd\",\n    value: function handleAdd(event) {\n      event.preventDefault();\n    }\n  }, {\n    key: \"handleUpdate\",\n    value: function handleUpdate(event) {\n      event.preventDefault();\n    }\n  }, {\n    key: \"handleDelete\",\n    value: function handleDelete(event) {\n      event.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var trees = this.props.trees;\n\n      if (typeof trees === \"undefined\") {\n        __jsx(Layout, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }\n        }, \"\\uB0B4 \\uB098\\uBB34 \\uC870\\uD68C\", __jsx(\"ul\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }\n        }, treeList));\n      } else {\n        var _treeList = trees.map(function (tree) {\n          return __jsx(\"li\", {\n            key: tree.id,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 25\n            }\n          }, tree.username);\n        });\n\n        return __jsx(Layout, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }\n        }, \"\\uB0B4 \\uB098\\uBB34 \\uC870\\uD68C\", __jsx(\"ul\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }\n        }, _treeList));\n      }\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var req, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                req = _ref.req;\n                _context.next = 3;\n                return axios.get(API_URL + '/listtrees');\n\n              case 3:\n                response = _context.sent;\n                console.log(response.data);\n                return _context.abrupt(\"return\", {\n                  trees: response.data\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return MyTree;\n}(React.Component);\n\nexport default MyTree;","map":{"version":3,"sources":["/media/jaeho/EXTSSD/gitlab/TreeConnector-Web/pages/mytree.js"],"names":["Layout","axios","API_URL","MyTree","props","state","handleAdd","bind","handleUpdate","handleDelete","event","preventDefault","trees","treeList","map","tree","id","username","req","get","response","console","log","data","React","Component"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;IAEMC,M;;;;;AACF,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,EAAb;AAEA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,+BAAjB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,+BAApB;AACA,UAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,+BAApB;AANe;AAOlB;;;;8BAUSG,K,EAAO;AACbA,MAAAA,KAAK,CAACC,cAAN;AACH;;;iCAEYD,K,EAAO;AAChBA,MAAAA,KAAK,CAACC,cAAN;AACH;;;iCAEYD,K,EAAO;AAChBA,MAAAA,KAAK,CAACC,cAAN;AACH;;;6BAEQ;AAAA;;AAAA,UAEGC,KAFH,GAEa,KAAKR,KAFlB,CAEGQ,KAFH;;AAIL,UAAG,OAAOA,KAAP,KAAiB,WAApB,EAAiC;AAC7B,cAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKC,QADL,CAFJ;AAMH,OAPD,MAQK;AACD,YAAMA,SAAQ,GAAGD,KAAK,CAACE,GAAN,CACb,UAAAC,IAAI;AAAA,iBAAI;AAAI,YAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAmBD,IAAI,CAACE,QAAxB,CAAJ;AAAA,SADS,CAAjB;;AAGA,eACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKJ,SADL,CAFJ,CADJ;AAQH;AACJ;;;;;;;;;;AA7C8BK,gBAAAA,G,QAAAA,G;;uBACJjB,KAAK,CAACkB,GAAN,CAAUjB,OAAO,GAAG,YAApB,C;;;AAAjBkB,gBAAAA,Q;AACNC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;iDACQ;AACJX,kBAAAA,KAAK,EAAEQ,QAAQ,CAACG;AADZ,iB;;;;;;;;;;;;;;;;;;;EAbKC,KAAK,CAACC,S;;AA0D3B,eAAetB,MAAf","sourcesContent":["import Layout from '../components/Layout';\r\nimport axios from 'axios';\r\nimport API_URL from '../components/ApiUrl'\r\n\r\nclass MyTree extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        \r\n        this.handleAdd = this.handleAdd.bind(this);\r\n        this.handleUpdate = this.handleUpdate.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n    }\r\n\r\n    static async getInitialProps ({req}) {\r\n        const response = await axios.get(API_URL + '/listtrees');\r\n        console.log(response.data);\r\n        return  {\r\n            trees: response.data\r\n        }\r\n    }\r\n\r\n    handleAdd(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleUpdate(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleDelete(event) {\r\n        event.preventDefault();\r\n    }\r\n    \r\n    render() {\r\n\r\n        const { trees } = this.props;\r\n\r\n        if(typeof trees === \"undefined\") {\r\n            <Layout>\r\n                내 나무 조회\r\n                <ul>\r\n                    {treeList}\r\n                </ul>\r\n            </Layout>\r\n        }\r\n        else {\r\n            const treeList = trees.map(\r\n                tree => <li key={tree.id}>{tree.username}</li>\r\n            )\r\n            return (\r\n                <Layout>\r\n                    내 나무 조회\r\n                    <ul>\r\n                        {treeList}\r\n                    </ul>\r\n                </Layout>\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\nexport default MyTree;"]},"metadata":{},"sourceType":"module"}
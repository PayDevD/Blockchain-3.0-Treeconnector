{"ast":null,"code":"var _jsxFileName = \"/media/jaeho/EXTSSD/gitlab/TreeConnector-Web/pages/mytree.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport axios from 'axios';\nimport API_URL from '../components/ApiUrl';\n\nclass MyTree extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  static async getInitialProps({\n    req\n  }) {\n    const response = await axios.get(API_URL + '/listtrees');\n    console.log(response.data);\n    return {\n      trees: response.data\n    };\n  }\n\n  handleAdd(event) {\n    event.preventDefault();\n  }\n\n  handleUpdate(event) {\n    event.preventDefault();\n  }\n\n  handleDelete(event) {\n    event.preventDefault();\n  }\n\n  render() {\n    const {\n      trees\n    } = this.props;\n\n    if (typeof trees === \"undefined\") {\n      __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, \"\\uB0B4 \\uB098\\uBB34 \\uC870\\uD68C\", __jsx(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }, treeList));\n    } else {\n      const treeList = trees.map(tree => __jsx(\"li\", {\n        key: tree.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }\n      }, tree.username));\n      return __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, \"\\uB0B4 \\uB098\\uBB34 \\uC870\\uD68C\", __jsx(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, treeList));\n    }\n  }\n\n}\n\nexport default MyTree;","map":{"version":3,"sources":["/media/jaeho/EXTSSD/gitlab/TreeConnector-Web/pages/mytree.js"],"names":["Layout","axios","API_URL","MyTree","React","Component","constructor","props","state","handleAdd","bind","handleUpdate","handleDelete","getInitialProps","req","response","get","console","log","data","trees","event","preventDefault","render","treeList","map","tree","id","username"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,MAAMC,MAAN,SAAqBC,KAAK,CAACC,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AAEA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAED,eAAaG,eAAb,CAA8B;AAACC,IAAAA;AAAD,GAA9B,EAAqC;AACjC,UAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAUd,OAAO,GAAG,YAApB,CAAvB;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;AACA,WAAQ;AACJC,MAAAA,KAAK,EAAEL,QAAQ,CAACI;AADZ,KAAR;AAGH;;AAEDV,EAAAA,SAAS,CAACY,KAAD,EAAQ;AACbA,IAAAA,KAAK,CAACC,cAAN;AACH;;AAEDX,EAAAA,YAAY,CAACU,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACC,cAAN;AACH;;AAEDV,EAAAA,YAAY,CAACS,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACC,cAAN;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEH,MAAAA;AAAF,QAAY,KAAKb,KAAvB;;AAEA,QAAG,OAAOa,KAAP,KAAiB,WAApB,EAAiC;AAC7B,YAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKI,QADL,CAFJ;AAMH,KAPD,MAQK;AACD,YAAMA,QAAQ,GAAGJ,KAAK,CAACK,GAAN,CACbC,IAAI,IAAI;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmBD,IAAI,CAACE,QAAxB,CADK,CAAjB;AAGA,aACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKJ,QADL,CAFJ,CADJ;AAQH;AACJ;;AAvDgC;;AA0DrC,eAAerB,MAAf","sourcesContent":["import Layout from '../components/Layout';\r\nimport axios from 'axios';\r\nimport API_URL from '../components/ApiUrl'\r\n\r\nclass MyTree extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        \r\n        this.handleAdd = this.handleAdd.bind(this);\r\n        this.handleUpdate = this.handleUpdate.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n    }\r\n\r\n    static async getInitialProps ({req}) {\r\n        const response = await axios.get(API_URL + '/listtrees');\r\n        console.log(response.data);\r\n        return  {\r\n            trees: response.data\r\n        }\r\n    }\r\n\r\n    handleAdd(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleUpdate(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleDelete(event) {\r\n        event.preventDefault();\r\n    }\r\n    \r\n    render() {\r\n\r\n        const { trees } = this.props;\r\n\r\n        if(typeof trees === \"undefined\") {\r\n            <Layout>\r\n                내 나무 조회\r\n                <ul>\r\n                    {treeList}\r\n                </ul>\r\n            </Layout>\r\n        }\r\n        else {\r\n            const treeList = trees.map(\r\n                tree => <li key={tree.id}>{tree.username}</li>\r\n            )\r\n            return (\r\n                <Layout>\r\n                    내 나무 조회\r\n                    <ul>\r\n                        {treeList}\r\n                    </ul>\r\n                </Layout>\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\nexport default MyTree;"]},"metadata":{},"sourceType":"module"}
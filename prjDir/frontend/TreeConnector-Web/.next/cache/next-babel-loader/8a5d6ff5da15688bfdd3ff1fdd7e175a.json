{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/media/jaeho/EXTSSD/gitlab/TreeConnector-Web/pages/treeinfo.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Layout from '../components/Layout';\nimport axios from 'axios';\nimport API_URL from '../components/ApiUrl';\n\nvar TreeInfo = /*#__PURE__*/function (_React$Component) {\n  _inherits(TreeInfo, _React$Component);\n\n  var _super = _createSuper(TreeInfo);\n\n  function TreeInfo() {\n    _classCallCheck(this, TreeInfo);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TreeInfo, [{\n    key: \"render\",\n    // static async getInitialProps ({req}) {\n    //     const diagnoses = await axios.get(API_URL + '/listdiagnoses');\n    //     const treatments = await axios.get(API_URL + '/listtreatments');\n    //     return {\n    //         diagnoses: diagnoses.data.response,\n    //         treatments: treatments.data.reponse\n    //     }\n    // }\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          diagnoses = _this$props.diagnoses,\n          treatments = _this$props.treatments;\n      var diagnosisList = diagnoses.map(function (diagnosis) {\n        return __jsx(\"li\", {\n          key: diagnosis.Id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 26\n          }\n        }, diagnosis.Content);\n      });\n      var treatmentList = treatments.map(function (treatment) {\n        return __jsx(\"li\", {\n          key: treatment.Id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 26\n          }\n        }, treatment.Content);\n      });\n      return __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return TreeInfo;\n}(React.Component);\n\nexport default TreeInfo;","map":{"version":3,"sources":["/media/jaeho/EXTSSD/gitlab/TreeConnector-Web/pages/treeinfo.js"],"names":["Layout","axios","API_URL","TreeInfo","props","diagnoses","treatments","diagnosisList","map","diagnosis","Id","Content","treatmentList","treatment","React","Component"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;IAEMC,Q;;;;;;;;;;;;;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;6BAES;AAAA;;AAAA,wBAC6B,KAAKC,KADlC;AAAA,UACGC,SADH,eACGA,SADH;AAAA,UACcC,UADd,eACcA,UADd;AAEL,UAAMC,aAAa,GAAGF,SAAS,CAACG,GAAV,CAClB,UAAAC,SAAS;AAAA,eAAI;AAAI,UAAA,GAAG,EAAEA,SAAS,CAACC,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwBD,SAAS,CAACE,OAAlC,CAAJ;AAAA,OADS,CAAtB;AAGA,UAAMC,aAAa,GAAGN,UAAU,CAACE,GAAX,CAClB,UAAAK,SAAS;AAAA,eAAI;AAAI,UAAA,GAAG,EAAEA,SAAS,CAACH,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwBG,SAAS,CAACF,OAAlC,CAAJ;AAAA,OADS,CAAtB;AAIA,aACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAMH;;;;EAzBkBG,KAAK,CAACC,S;;AA4B7B,eAAeZ,QAAf","sourcesContent":["import Layout from '../components/Layout';\nimport axios from 'axios';\nimport API_URL from '../components/ApiUrl';\n\nclass TreeInfo extends React.Component {\n    // static async getInitialProps ({req}) {\n    //     const diagnoses = await axios.get(API_URL + '/listdiagnoses');\n    //     const treatments = await axios.get(API_URL + '/listtreatments');\n    //     return {\n    //         diagnoses: diagnoses.data.response,\n    //         treatments: treatments.data.reponse\n    //     }\n    // }\n\n    render() {\n        const { diagnoses, treatments } = this.props;\n        const diagnosisList = diagnoses.map(\n            diagnosis => <li key={diagnosis.Id}>{diagnosis.Content}</li>\n        )\n        const treatmentList = treatments.map(\n            treatment => <li key={treatment.Id}>{treatment.Content}</li>\n        )\n\n        return(\n            <Layout>\n                {/* <ul>{diagnosisList}</ul><br />\n                <ul>{treatmentList}</ul> */}\n            </Layout>\n        )\n    }\n}\n\nexport default TreeInfo;"]},"metadata":{},"sourceType":"module"}
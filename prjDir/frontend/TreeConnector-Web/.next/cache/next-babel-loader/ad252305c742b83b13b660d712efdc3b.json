{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/media/jaeho/EXTSSD/gitlab/TreeConnector-Web/pages/addtree.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Router from 'next/router';\nimport Layout from '../components/Layout';\nimport axios from 'axios';\nimport API_URL from '../components/ApiUrl';\n\nvar AddTree = /*#__PURE__*/function (_React$Component) {\n  _inherits(AddTree, _React$Component);\n\n  var _super = _createSuper(AddTree);\n\n  function AddTree(props) {\n    var _this;\n\n    _classCallCheck(this, AddTree);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      id: '1',\n      ownerId: 'user1',\n      kind: 'pine'\n    };\n    _this.handleChangeKind = _this.handleKindChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AddTree, [{\n    key: \"handleKindChange\",\n    value: function handleKindChange(event) {\n      this.setState({\n        kind: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var data = {\n        Id: this.state.id,\n        OwnerId: this.state.OwnerId,\n        Kind: this.state.kind\n      };\n      var headers = {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      };\n      axios.post(API_URL + '/addtree', data, headers).then(function (res) {\n        alert(\"등록이 완료되었습니다.\");\n        Router.push('/mytree');\n      })[\"catch\"](function (err) {\n        alert(err);\n      });\n      event.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, __jsx(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }, \"ID:\", __jsx(\"input\", {\n        type: \"text\",\n        disabled: true,\n        value: this.state.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }\n      })), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }), __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, \"KIND:\", __jsx(\"select\", {\n        value: this.state.kind,\n        onChange: this.handleKindChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      }, __jsx(\"option\", {\n        value: \"pine\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }\n      }, \"\\uC18C\\uB098\\uBB34\"), __jsx(\"option\", {\n        value: \"birch\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }\n      }, \"\\uC790\\uC791\\uB098\\uBB34\"), __jsx(\"option\", {\n        value: \"ginkgo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }\n      }, \"\\uC740\\uD589\\uB098\\uBB34\"))), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      }), __jsx(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return AddTree;\n}(React.Component);\n\nexport default AddTree;","map":{"version":3,"sources":["/media/jaeho/EXTSSD/gitlab/TreeConnector-Web/pages/addtree.js"],"names":["Router","Layout","axios","API_URL","AddTree","props","state","id","ownerId","kind","handleChangeKind","handleKindChange","bind","handleSubmit","event","setState","target","value","data","Id","OwnerId","Kind","headers","post","then","res","alert","push","err","preventDefault","React","Component"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;IAEMC,O;;;;;AACF,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,EAAE,EAAE,GADK;AAETC,MAAAA,OAAO,EAAE,OAFA;AAGTC,MAAAA,IAAI,EAAE;AAHG,KAAb;AAMA,UAAKC,gBAAL,GAAwB,MAAKC,gBAAL,CAAsBC,IAAtB,+BAAxB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,+BAApB;AATe;AAUlB;;;;qCAEgBE,K,EAAO;AACpB,WAAKC,QAAL,CAAc;AAACN,QAAAA,IAAI,EAAEK,KAAK,CAACE,MAAN,CAAaC;AAApB,OAAd;AACH;;;iCAEYH,K,EAAO;AAChB,UAAMI,IAAI,GAAG;AACTC,QAAAA,EAAE,EAAC,KAAKb,KAAL,CAAWC,EADL;AAETa,QAAAA,OAAO,EAAC,KAAKd,KAAL,CAAWc,OAFV;AAGTC,QAAAA,IAAI,EAAC,KAAKf,KAAL,CAAWG;AAHP,OAAb;AAKA,UAAMa,OAAO,GAAG;AACZ,wBAAgB;AADJ,OAAhB;AAIApB,MAAAA,KAAK,CAACqB,IAAN,CAAWpB,OAAO,GAAG,UAArB,EAAiCe,IAAjC,EAAuCI,OAAvC,EACCE,IADD,CACM,UAAAC,GAAG,EAAI;AACTC,QAAAA,KAAK,CAAC,cAAD,CAAL;AACA1B,QAAAA,MAAM,CAAC2B,IAAP,CAAY,SAAZ;AACH,OAJD,WAKO,UAAAC,GAAG,EAAI;AACVF,QAAAA,KAAK,CAACE,GAAD,CAAL;AACH,OAPD;AASAd,MAAAA,KAAK,CAACe,cAAN;AACH;;;6BAEQ;AACL,aACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,QAAQ,EAAE,KAAKhB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,MAA3B;AAA4B,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAQ,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWG,IAA1B;AAAgC,QAAA,QAAQ,EAAE,KAAKE,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAFJ,EAGI;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAHJ,CAFJ,CANJ,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdJ,EAeI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfJ,CADJ,CADJ;AAqBH;;;;EA7DiBmB,KAAK,CAACC,S;;AAgE5B,eAAe3B,OAAf","sourcesContent":["import Router from 'next/router';\nimport Layout from '../components/Layout';\nimport axios from 'axios';\nimport API_URL from '../components/ApiUrl';\n\nclass AddTree extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: '1',\n            ownerId: 'user1',\n            kind: 'pine'\n        }\n\n        this.handleChangeKind = this.handleKindChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleKindChange(event) {\n        this.setState({kind: event.target.value});\n    }\n\n    handleSubmit(event) {\n        const data = {\n            Id:this.state.id,\n            OwnerId:this.state.OwnerId,\n            Kind:this.state.kind\n        }\n        const headers = {\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n        \n        axios.post(API_URL + '/addtree', data, headers)\n        .then(res => {\n            alert(\"등록이 완료되었습니다.\");\n            Router.push('/mytree');\n        })\n        .catch(err => {\n            alert(err);\n        })\n\n        event.preventDefault();\n    }\n\n    render() {\n        return(\n            <Layout>\n                <form onSubmit={this.handleSubmit}>\n                    <label>\n                        ID:\n                        <input type=\"text\" disabled value={this.state.id} />\n                    </label>\n                    <br />\n                    <label>\n                        KIND:\n                        <select value={this.state.kind} onChange={this.handleKindChange}>\n                            <option value=\"pine\">소나무</option>\n                            <option value=\"birch\">자작나무</option>\n                            <option value=\"ginkgo\">은행나무</option>\n                        </select>\n                    </label>\n                    <br />\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n            </Layout>\n        )\n    }\n}\n\nexport default AddTree"]},"metadata":{},"sourceType":"module"}
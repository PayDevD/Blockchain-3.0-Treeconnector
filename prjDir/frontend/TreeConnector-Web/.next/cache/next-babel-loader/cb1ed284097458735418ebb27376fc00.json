{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/media/jaeho/EXTSSD/gitlab/blockchain3.0project/prjDir/frontend/TreeConnector-Web/pages/mytree.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Layout from '../components/Layout';\nimport Link from 'next/link';\nimport axios from 'axios';\nimport API_URL from '../components/ApiUrl';\nimport Router from 'next/router';\n\nvar MyTree = /*#__PURE__*/function (_React$Component) {\n  _inherits(MyTree, _React$Component);\n\n  var _super = _createSuper(MyTree);\n\n  function MyTree(props) {\n    var _this;\n\n    _classCallCheck(this, MyTree);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    _this.handleAdd = _this.handleAdd.bind(_assertThisInitialized(_this));\n    _this.handleUpdate = _this.handleUpdate.bind(_assertThisInitialized(_this));\n    _this.handleDelete = _this.handleDelete.bind(_assertThisInitialized(_this));\n    return _this;\n  } // static async getInitialProps ({req}) {\n  //     const response = await axios.get(API_URL + '/listtrees');\n  //     console.log(response.data.response);\n  //     return  {\n  //         trees: response.data.response\n  //     }\n  // }\n\n\n  _createClass(MyTree, [{\n    key: \"handleAdd\",\n    value: function handleAdd(event) {\n      event.preventDefault();\n      Router.push('/addtree');\n    }\n  }, {\n    key: \"handleUpdate\",\n    value: function handleUpdate(event) {\n      alert(\"not yet\");\n      event.preventDefault();\n    }\n  }, {\n    key: \"handleDelete\",\n    value: function handleDelete(event) {\n      alert(\"not yet\");\n      event.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var trees = this.props.trees;\n\n      if (typeof trees.map === \"undefined\") {\n        console.log(trees);\n        return __jsx(Layout, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }\n        }, \"\\uB0B4 \\uB098\\uBB34 \\uC870\\uD68C\", __jsx(\"ul\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }\n        }), __jsx(\"input\", {\n          type: \"submit\",\n          value: \"Add\",\n          onClick: this.handleAdd,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }\n        }), __jsx(\"input\", {\n          type: \"submit\",\n          value: \"Update\",\n          onClick: this.handleUpdate,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }\n        }), __jsx(\"input\", {\n          type: \"submit\",\n          value: \"Delete\",\n          onClick: this.handleDelete,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }\n        }));\n      } else {\n        var treeList = trees.map(function (tree) {\n          return __jsx(\"li\", {\n            key: tree.Id,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }\n          }, __jsx(Link, {\n            href: \"/treeinfo?treeid=1\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 43\n            }\n          }, __jsx(\"a\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 75\n            }\n          }, tree.Id)));\n        });\n        return __jsx(Layout, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }\n        }, \"\\uB0B4 \\uB098\\uBB34 \\uC870\\uD68C\", __jsx(\"ul\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }\n        }, treeList), __jsx(\"input\", {\n          type: \"submit\",\n          value: \"Add\",\n          onClick: this.handleAdd,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }\n        }), __jsx(\"input\", {\n          type: \"submit\",\n          value: \"Update\",\n          onClick: this.handleUpdate,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }\n        }), __jsx(\"input\", {\n          type: \"submit\",\n          value: \"Delete\",\n          onClick: this.handleDelete,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }\n        }));\n      }\n    }\n  }]);\n\n  return MyTree;\n}(React.Component);\n\nexport default MyTree;","map":{"version":3,"sources":["/media/jaeho/EXTSSD/gitlab/blockchain3.0project/prjDir/frontend/TreeConnector-Web/pages/mytree.js"],"names":["Layout","Link","axios","API_URL","Router","MyTree","props","state","handleAdd","bind","handleUpdate","handleDelete","event","preventDefault","push","alert","trees","map","console","log","treeList","tree","Id","React","Component"],"mappings":"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","sourcesContent":["import Layout from '../components/Layout';\r\nimport Link from 'next/link'\r\nimport axios from 'axios';\r\nimport API_URL from '../components/ApiUrl'\r\nimport Router from 'next/router';\r\n\r\nclass MyTree extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        \r\n        this.handleAdd = this.handleAdd.bind(this);\r\n        this.handleUpdate = this.handleUpdate.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n    }\r\n\r\n    // static async getInitialProps ({req}) {\r\n    //     const response = await axios.get(API_URL + '/listtrees');\r\n    //     console.log(response.data.response);\r\n    //     return  {\r\n    //         trees: response.data.response\r\n    //     }\r\n    // }\r\n\r\n    handleAdd(event) {\r\n        event.preventDefault();\r\n        Router.push('/addtree');\r\n    }\r\n\r\n    handleUpdate(event) {\r\n        alert(\"not yet\");\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleDelete(event) {\r\n        alert(\"not yet\");\r\n        event.preventDefault();\r\n    }\r\n    \r\n    render() {\r\n\r\n        const { trees } = this.props;\r\n\r\n        if(typeof trees.map === \"undefined\") {\r\n            console.log(trees)\r\n            return(\r\n                <Layout>\r\n                    내 나무 조회\r\n                    <ul>\r\n                    </ul>\r\n                <input type=\"submit\" value=\"Add\" onClick={this.handleAdd}/>\r\n                <input type=\"submit\" value=\"Update\" onClick={this.handleUpdate}/>\r\n                <input type=\"submit\" value=\"Delete\" onClick={this.handleDelete}/>\r\n                </Layout>\r\n            )\r\n        }\r\n        else {\r\n            const treeList = trees.map(\r\n                tree => <li key={tree.Id}><Link href=\"/treeinfo?treeid=1\"><a>{tree.Id}</a></Link></li>\r\n            )\r\n            return (\r\n                <Layout>\r\n                    내 나무 조회\r\n                    <ul>\r\n                        {treeList}\r\n                    </ul>\r\n                <input type=\"submit\" value=\"Add\" onClick={this.handleAdd}/>\r\n                <input type=\"submit\" value=\"Update\" onClick={this.handleUpdate}/>\r\n                <input type=\"submit\" value=\"Delete\" onClick={this.handleDelete}/>\r\n                </Layout>\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\nexport default MyTree;"]},"metadata":{},"sourceType":"module"}
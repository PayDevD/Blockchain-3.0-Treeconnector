{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/media/jaeho/EXTSSD/gitlab/blockchain3.0project/prjDir/frontend/TreeConnector-Web/pages/_error.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport ErrorPage from '../components/ErrorPage';\n\nvar RootError = /*#__PURE__*/function (_Component) {\n  _inherits(RootError, _Component);\n\n  var _super = _createSuper(RootError);\n\n  function RootError() {\n    _classCallCheck(this, RootError);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(RootError, [{\n    key: \"render\",\n    value: function render() {\n      var statusCode = this.props.statusCode;\n      return __jsx(ErrorPage, {\n        statusCode: statusCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 16\n        }\n      });\n    }\n  }]);\n\n  return RootError;\n}(Component);\n\nexport { RootError as default };","map":{"version":3,"sources":["/media/jaeho/EXTSSD/gitlab/blockchain3.0project/prjDir/frontend/TreeConnector-Web/pages/_error.js"],"names":["React","Component","ErrorPage","RootError","statusCode","props"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;IAEqBC,S;;;;;;;;;;;;;6BACR;AAAA,UACGC,UADH,GACkB,KAAKC,KADvB,CACGD,UADH;AAEL,aAAO,MAAC,SAAD;AAAW,QAAA,UAAU,EAAEA,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;;;EAJkCH,S;;SAAlBE,S","sourcesContent":["import React, { Component } from 'react';\r\nimport ErrorPage from '../components/ErrorPage';\r\n\r\nexport default class RootError extends Component {\r\n    render() {\r\n        const { statusCode } = this.props;\r\n        return <ErrorPage statusCode={statusCode} />;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}